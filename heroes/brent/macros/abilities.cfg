#### Brent's Custom Abilities ####
#define BLOODLUST FILTER
    [event]
        name=die
        first_time_only=no

        [filter_second]
            {FILTER}
        [/filter_second]

        {MODIFY_UNIT x,y=$x2,$y2 moves 0}
        {MODIFY_UNIT x,y=$x2,$y2 attacks_left 1}
    [/event]
#enddef

#define KNOCKBACK_EVENT
    [event]
        name=attacker_hits
        first_time_only=no

        [filter_attack]
            special=knockback
        [/filter_attack]
        [if]
            [variable]
                name=damage_inflicted
                less_than=$second_unit.hitpoints
            [/variable]
            [then]
                [sound]
                    name=ghoul-hit.wav
                [/sound]

                {OPPOSITE_SIDE $x2 $y2 $x1 $y1 target_hex}

                [store_locations]
                    x,y=$x2,$y2
                    terrain=AaBbDeLptUVvYZ
                    variable=defender_in_village
                [/store_locations]
                [if]
                    [have_unit]
                        x,y=$target_hex.x,$target_hex.y
                    [/have_unit]
                    [else]
                        {IF_VAR defender_in_village.length not_equals 1 (
                            [then]
                                {STORE_UNIT_VAR x,y=$x2,$y2 side side_of_defender}

                                [teleport]
                                    [filter]
                                        x,y=$x2,$y2
                                    [/filter]

                                    x,y=$target_hex.x,$target_hex.y
                                [/teleport]

                                [capture_village]
                                    side=$side_of_defender
                                    x,y=$target_hex.x,$target_hex.y
                                [/capture_village]

                                {CLEAR_VARIABLE side_of_defender}
                            [/then]
                        )}
                    [/else]
                [/if]

                {CLEAR_VARIABLE target_hex}
                {CLEAR_VARIABLE defender_in_village}
            [/then]
        [/if]
    [/event]
#enddef

#define ABILITY_STREET_SMARTS
    # Canned definition of the STREET_SMARTS ability to be included in an
    # [abilities] clause.
    [hides]
        id=street_smarts
        name= _ "street smarts"
        female_name= _ "female^street smarts"
        description= _ "This unit can hide in villages (with the exception of water villages) and cities, remaining undetected by its enemies, except by those standing next to it.

Enemy units can not see this unit while it is in a village, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement and attacks."
        id=street_smarts
        name= _ "street smarts"
        female_name= _ "female^street smarts"
        description= _ "This unit can hide in villages (with the exception of water villages) and cities, remaining undetected by its enemies, except by those standing next to it.

Enemy units can not see this unit while it is in a village, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement and attacks."
        affect_self=yes
        [filter_self]
            [filter_location]
                terrain=*^V*,C*
            [/filter_location]
        [/filter_self]
    [/hides]
#enddef

#define POISON_EVENT
    [event]
        name=attacker hits
        first_time_only=no
        [filter_attack]
            special=custom_poison
        [/filter_attack]
        [filter_second]
            [not]
                [filter_wml]
                    [status]
                        not_living="yes"
                    [/status]
                [/filter_wml]
            [/not]
        [/filter_second]
        {VARIABLE second_unit.status.custom_poison yes}
        {VARIABLE second_unit.status.custom_poison_damage $weapon.specials.custom_poison.value}
        [unstore_unit]
            variable=second_unit
        [/unstore_unit]
        [unit_overlay]
            x,y=$second_unit.x,$second_unit.y
            image=misc/poisoned.png
        [/unit_overlay]
    [/event]
    [event]
        name=defender_hits
        first_time_only=no
        [filter_second_attack]
            special=weak_poison
        [/filter_second_attack]
        [filter]
            [not]
                [filter_wml]
                    [status]
                        not_living="yes"
                    [/status]
                [/filter_wml]
            [/not]
        [/filter]
        {VARIABLE unit.status.custom_poison yes}
        {VARIABLE unit.status.custom_poison_damage $second_weapon.specials.custom_poison.value}
        [unstore_unit]
            variable=unit
        [/unstore_unit]
        [unit_overlay]
            x,y=$unit.x,$unit.y
            image=misc/poisoned.png
        [/unit_overlay]
    [/event]
#enddef

#define POISON_DAMAGE
    [event]
        name=side turn
        first_time_only=no
        [store_unit]
            variable=custom_poison
            [filter]
                [filter_wml]
                    [status]
                        custom_poison="yes"
                    [/status]
                [/filter_wml]
                side=$side_number
            [/filter]
            kill=no
        [/store_unit]
        {VARIABLE poison_damage $custom_poison.status.custom_poison_damage}
        {FOREACH custom_poison i}
            {VARIABLE custom_poison[$i].resting no}
            [if]
                [have_unit]
                    x,y=$custom_poison[$i].x,$custom_poison[$i].y
                    [filter_adjacent]
                        is_enemy=no
                        [and]
                            ability=healing
                            [or]
                                ability=curing
                            [/or]
                        [/and]
                    [/filter_adjacent]
                [/have_unit]

                [then]
                    {CLEAR_VARIABLE custom_poison[$i].status.custom_poison}
                    {CLEAR_VARIABLE custom_poison[$i].status.custom_poison_damage}
                    [remove_unit_overlay]
                        x,y=$custom_poison[$i].x,$custom_poison[$i].y
                        image=misc/poisoned.png
                    [/remove_unit_overlay]
                    [unstore_unit]
                        variable=custom_poison[$i]
                    [/unstore_unit]
                [/then]

                [else]
                    [if]
                        [variable]
                            name=custom_poison[$i].hitpoints
                            greater_than=$poison_damage
                        [/variable]

                        [then]
                            {VARIABLE_OP custom_poison[$i].hitpoints add -$poison_damage}
                        [/then]

                        [else]
                            {VARIABLE custom_poison[$i].hitpoints 1}
                        [/else]
                    [/if]
                [/else]
            [/if]
            [unstore_unit]
                variable=custom_poison[$i]
                find_vacant=no
                text="$poison_damage"
                {COLOR_HARM}
            [/unstore_unit]
        {NEXT i}
        {CLEAR_VARIABLE custom_poison}
        {CLEAR_VARIABLE posion_damage}
    [/event]
#enddef

#define FEINT_EVENT
    [event]
        name=attacker_misses
        first_time_only=no
        [filter_attack]
            special=feint
        [/filter_attack]
        [if]
            [variable]
                name=second_unit.status.feint
                not_equals=yes
            [/variable]
            [then]
                {VARIABLE second_unit.status.feint yes}
                {MODIFY_UNIT x,y=$x1,$y1 attacks_left 1}
            [/then]
        [/if]
        [unstore_unit]
            variable=second_unit
        [/unstore_unit]
    [/event]

    [event]
        name=attack
        first_time_only=no

        [filter_attack]
            special=backstab
        [/filter_attack]

        [filter_second]
            [filter_wml]
                [status]
                    feint="yes"
                [/status]
            [/filter_wml]
        [/filter_second]

        [if]
            [then]
                {FOREACH unit.attack i}
                    [if]
                        [variable]
                            name=unit.attack[$i].specials.chance_to_hit.length
                            greater_than=0
                        [/variable]

                        [then]
                            [set_variables]
                                name=unit.attack[$i].specials.original_chance_to_hit
                                to_variable=unit.attack[$i].specials.chance_to_hit
                            [/set_variables]

                            {CLEAR_VARIABLE unit.attack[$i].specials.chance_to_hit}
                        [/then]
                    [/if]
                    {VARIABLE unit.attack[$i].original_damage unit.attack[$i].damage}
                    {VARIABLE_OP unit.attack[$i].damage multiply 2}
                    [set_variables]
                        name=unit.attack[$i].specials.chance_to_hit
                        [value]
                            id=forced_cth
                            add=10
                            cumulative=no
                        [/value]
                    [/set_variables]
                {NEXT i}

                [unstore_unit]
                    variable=unit
                    find_vacant=no
                [/unstore_unit]

                [event]
                    name=attack end
                    delayed_variable_substitution=yes

                    {FOREACH unit.attack i}
                        {CLEAR_VARIABLE unit.attack[$i].specials.chance_to_hit}

                        [set_variables]
                            name=unit.attack[$i].specials.chance_to_hit
                            to_variable=unit.attack[$i].specials.original_chance_to_hit
                        [/set_variables]
                        {VARIABLE unit.attack[$i].damage unit.attack[$i].original_damage}
                        {CLEAR_VARIABLE unit.attack[$i].original_damage}
                        {CLEAR_VARIABLE unit.attack[$i].specials.original_chance_to_hit}
                    {NEXT i}

                    [unstore_unit]
                        variable=unit
                        find_vacant=no
                    [/unstore_unit]
                [/event]
            [/then]
        [/if]
    [/event]
#enddef
