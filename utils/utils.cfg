##############################
#### General Manipulation ####
##############################

#define INC VAR
    {VARIABLE_OP {VAR} add 1}
#enddef

#define ID_MESSAGE ID MESSAGE
    [message]
        id={ID}
        message={MESSAGE}
    [/message]
#enddef

#define ENDLEVEL_VICTORY
    [endlevel]
        result=victory
        carryover_percentage=100%
        bonus=no
        carryover_report=no
    [/endlevel]
#enddef

#define CONTINUE NEXT_SCENARIO
    [endlevel]
        result=victory
        next_scenario={NEXT_SCENARIO}
        save=yes
        carryover_report=no
        carryover_percentage=100
        linger_mode=no
        bonus=no
    [/endlevel]
#enddef

#define WES_MESSAGE MESSAGE
    [narrate]
        message={MESSAGE}
        image=wesnoth-icon.png
    [/narrate]
#enddef

#define RANDOM_MSG ID CAPTION MESSAGES
    ## Example: {RANDOM_MSG "Dwarf Guard-123" (_"I wish I were a butterfly..."|_"Heigh ho, heigh ho..."|_"What? You expect me to say something clever, little $unit.race?"|_"Ah, darkness, my love, how you speak to... what're you staring at?"|_"You should go speak to the king.")}
    [set_variables]
        name=random_msg
        [split]
            list={MESSAGES}
            key=msg
            separator=|
        [/split]
    [/set_variables]
    {RANDOM 1..$random_msg.length}
    {VARIABLE_OP random add -1}
    [message]
        id={ID}
        caption={CAPTION}
        message=$random_msg[$random].msg
    [/message]
    {CLEAR_VARIABLE random}
    {CLEAR_VARIABLE random_msg}
#enddef

# Using this, you can determine the coordinates on the "opposite side" of a
# central hex, relative to another hex adjacent to it. What this really means
# is illustrated below:
#       __            __            __
#    __/  \__      __/2 \__      __/  \__
#   /  \__/1 \    /  \__/  \    /2 \__/  \    C: central point
#   \__/C \__/    \__/C \__/    \__/C \__/    1: the hex to "mirror"
#   /2 \__/  \    /  \__/  \    /  \__/1 \    2: the result
#   \__/  \__/    \__/1 \__/    \__/  \__/
#      \__/          \__/          \__/
#
# The coordinates of the central point are given in {CENTER_X} and {CENTER_Y},
# and the coordinates of hex 1 in {X} and {Y}. The coordinates of hex 2 are
# then stored in {VAR}, which will have member variables x and y.
#
# Note that this uses the IF macro given earlier on this page.

#define OPPOSITE_SIDE CENTER_X CENTER_Y X Y VAR
    {VARIABLE x_odd {X}}

    {VARIABLE_OP x_odd modulo 2}

    {VARIABLE c_x {CENTER_X}}
    {VARIABLE c_y {CENTER_Y}}
    {VARIABLE s_x {X}}
    {VARIABLE s_y {Y}}

    {VARIABLE result_x {CENTER_X}}
    {VARIABLE result_y {CENTER_Y}}

    {IF_VAR s_x greater_than $c_x (
        [then]
            {VARIABLE_OP result_x add -1}
        [/then]
    )}

    {IF_VAR s_x less_than $c_x (
        [then]
            {VARIABLE_OP result_x add 1}
        [/then]
    )}

    {IF_VAR s_x equals $c_x (
        [then]
            {IF_VAR s_y less_than $c_y (
                [then]
                    {VARIABLE_OP result_y add 1}
                [/then]
            )}

            {IF_VAR s_y greater_than $c_y (
                [then]
                    {VARIABLE_OP result_y add -1}
                [/then]
            )}
        [/then]
    )}

    {IF_VAR x_odd equals 1 (
        [then]
            {IF_VAR s_y equals $c_y (
                [then]
                    {VARIABLE_OP result_y add 1}
                [/then]
            )}
        [/then]

        [else]
            {IF_VAR s_y equals $c_y (
                [then]
                    {VARIABLE_OP result_y add -1}
                [/then]
            )}
        [/else]
    )}
    {VARIABLE {VAR}.x $result_x}
    {VARIABLE {VAR}.y $result_y}

    {CLEAR_VARIABLE c_x}
    {CLEAR_VARIABLE c_y}
    {CLEAR_VARIABLE s_x}
    {CLEAR_VARIABLE s_y}
    {CLEAR_VARIABLE result_x}
    {CLEAR_VARIABLE result_y}
    {CLEAR_VARIABLE x_odd}
#enddef

########################
#### Scenario Utils ####
########################

##Common elements to all scenarios
#define COMMON_INIT DAY_LENGTH MAP_NAME
    map_data="{~add-ons/Brent/maps/{MAP_NAME}.map}"
    [event]
        name=prestart
	[set_day]
	    day={DAY_LENGTH}
	[/set_day]
        [if]
            [variable]
                name=maps.{MAP_NAME}.known
                not_equals=1
            [/variable]
            [then]
                {VARIABLE maps.{MAP_NAME}.known 1}
            [/then]
        [/if]
    [/event]
    [event]
        name=start
        [set_menu_item]
            id=brent_show_days
            description=_"Calendar"
            #image= ?? needs custom image - sun?
            [show_if]
                [variable]
                    name=global_days
                    not_equals=$empty
                [/variable]
            [/show_if]
            [command]
                {WES_MESSAGE "It is day $global_days."}
            [/command]
        [/set_menu_item]
    [/event]
    [event]
        name=side turn
        [if]
            [variable]
                name=maps.{MAP_NAME}.visited
                not_equals=1
            [/variable]
            [then]
                [fire_event]
                    name=first visit
                [/fire_event]
                {VARIABLE maps.{MAP_NAME}.visited 1}
            [/then]
        [/if]
    [/event]
    [event]
        name=new turn
        first_time_only=no
        {VARIABLE_OP global_TOD add $turn_length}
        [if]
            [variable]
                name=global_TOD
                greater_than=24
            [/variable]
            [then]
                {VARIABLE gTOD_div $global_TOD}
                {VARIABLE_OP global_TOD modulo 24}
                {VARIABLE_OP gTOD_div add -$global_TOD}
                {VARIABLE_OP gTOD_div divide 24}
                {VARIABLE_OP global_days add $gTOD_div}
                {CLEAR_VARIABLE gTOD_div}
            [/then]
        [/if]
    [/event]
    [event]
        name=victory,defeat
        [store_unit]
            [filter]
                id=$main.id
            [/filter]
            kill=no
            variable=main_store
        [/store_unit]
        [store_shroud]
            side=1
            variable=maps.{MAP_NAME}.shroud_data
        [/store_shroud]
    [/event]
#enddef
#define COMMON DAY_LENGTH MAP_NAME
    map_data="{~add-ons/Brent/maps/{MAP_NAME}.map}"
    [event]
        name=prestart
	[set_day]
	    day={DAY_LENGTH}
	[/set_day]
        [store_unit]
            [filter]
                id=$main.id
            [/filter]
            kill=yes
            variable=tmp_main_store
        [/store_unit]
        {VARIABLE main_store.moves $main_store.max_moves}
        [if]
            [variable]
                name=from_x
                not_equals=$empty
            [/variable]
            [then]
                [unstore_unit]
                    variable=main_store
                    x,y=$from_x,$from_y
                [/unstore_unit]
                {SCROLL_TO $from_x $from_y}
            [/then]
            [else]
                [unstore_unit]
                    variable=main_store
                    x,y=$tmp_main_store.x,$tmp_main_store.y
                [/unstore_unit]
            [/else]
        [/if]
        {CLEAR_VARIABLE tmp_main_store}
        {CLEAR_VARIABLE main_store}
        {CLEAR_VARIABLE from_x}
        {CLEAR_VARIABLE from_y}
        [if]
            [variable]
                name=story_msg[0].message
                not_equals=$empty
            [/variable]
            [then]
                {FOREACH story_msg i}
                    {WES_MESSAGE $story_msg[$i].message}
                {NEXT i}
                {CLEAR_VARIABLE story_msg}
            [/then]
        [/if]
        [if]
            [variable]
                name=maps.{MAP_NAME}.known
                not_equals=1
            [/variable]
            [then]
                {VARIABLE maps.{MAP_NAME}.known 1}
            [/then]
        [/if]
        [if]
            [variable]
                name=maps.{MAP_NAME}.shroud_data
                not_equals=$empty
            [/variable]
            [then]
                [set_shroud]
                    side=1
                    shroud_data=$maps.{MAP_NAME}.shroud_data
                [/set_shroud]
            [/then]
        [/if]
    [/event]
    [event]
        name=start
        [set_menu_item]
            id=brent_show_days
            description=_"Calendar"
            #image= ?? needs custom image - sun?
            [show_if]
                [variable]
                    name=global_days
                    not_equals=$empty
                [/variable]
            [/show_if]
            [command]
                {WES_MESSAGE "It is day $global_days."}
            [/command]
        [/set_menu_item]
    [/event]
    [event]
        name=new turn
        first_time_only=no
        {VARIABLE_OP global_TOD add $turn_length}
        [if]
            [variable]
                name=global_TOD
                greater_than=24
            [/variable]
            [then]
                {VARIABLE gTOD_div $global_TOD}
                {VARIABLE_OP global_TOD modulo 24}
                {VARIABLE_OP gTOD_div add -$global_TOD}
                {VARIABLE_OP gTOD_div divide 24}
                {VARIABLE_OP global_days add $gTOD_div}
                {CLEAR_VARIABLE gTOD_div}
            [/then]
        [/if]
    [/event]
    [event]
        name=victory,defeat
        [store_unit]
            [filter]
                id=$main.id
            [/filter]
            kill=no
            variable=main_store
        [/store_unit]
        [store_shroud]
            side=1
            variable=maps.{MAP_NAME}.shroud_data
        [/store_shroud]
    [/event]
#enddef

#define RECALL_HELPERS ARRAY
    {FOREACH {ARRAY} i}
        [unstore_unit]
            variable={ARRAY}[$i]
            x,y=recall,recall
        [/unstore_unit]
        [recall]
            id=${ARRAY}[$i].id
        [/recall]
    {NEXT i}
#enddef

#define STORE_HELPERS KEY
    [store_unit]
        [filter]
            role={KEY}
        [/filter]
        kill=no
        variable={KEY}
    [/store_unit]
#enddef

#common elements to non-worldmap scenarios
#define NW_COMMON
    [event]
        name=start
        {RECALL_HELPERS helper}
        [if]
            [variable]
                name=quests.FQ[0].active
                equals=1
            [/variable]
            {FQ0_FAIL}
        [/if]
    [/event]
    [event]
        name=victory,defeat
        {STORE_HELPERS helper}
    [/event]
#enddef

#define STORY_MSG PART MESSAGE
    {VARIABLE story_msg[{PART}].message {MESSAGE}}
#enddef

#define BRENT_INN TOWN GOLD
    [message]
        image="portraits/wench.png"
        message=_"Welcome to "+{TOWN}+" Inn! Staying here for a night costs "+{GOLD}+" gold, but I'm afraid we don't have any rooms available right now!"
    [/message]
#enddef
